version: "3.7"
services:
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: unless-stopped
    hostname: grafana 
    user: "0"
    volumes:
      - ./monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./monitoring/grafana/grafanaDatasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./monitoring/grafana/grafanaDashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana/grafana-storage:/var/lib/grafana
    network_mode: host
    # ports:
    #   - 3000:3000
    # networks:
    #   - monitoring-network
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    user: root # https://github.com/prometheus/prometheus/issues/5976
    restart: unless-stopped
    hostname: prometheus
    command: --storage.tsdb.retention.time=5y --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    network_mode: host
    # ports:
    #   - 9090:9090
    # networks:
    #   - monitoring-network
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"
  
  jit-bot:
    container_name: drift-jit-maker
    image: drift-jit-bot:base
    restart: unless-stopped
    hostname: drift-jit-bot
    network_mode: host
    # ports:
    #   - 9090:9090
    # networks:
    #   - monitoring-network
    # extra_hosts:
    #   - "host.docker.internal:host-gateway"

  # nodeexporter:
  #    image: prom/node-exporter:latest
  #    volumes:
  #      - /proc:/host/proc:ro
  #      - /sys:/host/sys:ro
  #      - /:/rootfs:ro
  #    command:
  #      - '--path.procfs=/host/proc'
  #      - '--path.rootfs=/rootfs'
  #      - '--path.sysfs=/host/sys'
  #      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
  #    restart: unless-stopped
  #    expose:
  #      - 9100
  #    network_mode: host

  # cadvisor:
  #   image: gcr.io/google-containers/cadvisor:latest
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker:/var/lib/docker:ro
  #   restart: unless-stopped
  #   expose:
  #     - 8080
  #   network_mode: host
